#
# Copyright (c) 2022 Emanuel Machado da Silva
#
# Permission is hereby granted, free of charge, to any person obtaining a copy
# of this software and associated documentation files (the "Software"), to deal
# in the Software without restriction, including without limitation the rights
# to use, copy, modify, merge, publish, distribute, sublicense, and/or sell
# copies of the Software, and to permit persons to whom the Software is
# furnished to do so, subject to the following conditions:
#
# The above copyright notice and this permission notice shall be included in all
# copies or substantial portions of the Software.
#
# THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR
# IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,
# FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE
# AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER
# LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,
# OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE
# SOFTWARE.
#

name: Core Check

on:
  push:
    paths:
    - 'core/**'
    - '.github/workflows/core_check.yml'
  pull_request:
    paths:
    - 'core/**'
    - '.github/workflows/core_check.yml'

jobs:
  check_run:
    runs-on: ${{ matrix.os }}
    strategy:
      matrix:
        os: [ubuntu-20.04, macos-10.15]
        compiler: [gcc, clang]
        build_type: [Debug, Release]
        include:
          - os: ubuntu-20.04
            compiler: gcc
            extra-packages: gcc-11 g++-11
            CC: gcc-11
            CXX: g++-11
          - os: ubuntu-20.04
            compiler: clang
            extra-packages: clang-12 libunwind-dev libc++-12-dev libc++abi-12-dev
            CC: clang-12
            CXX: clang++-12
          - os: macos-10.15
            compiler: gcc
            CC: gcc-11
            CXX: g++-11
          # macos-10.15's default compiler is Apple Clang 12.0.0, so mac+clang doesn't need an 'include' entry

    env:
      CC: ${{ matrix.CC }}
      CXX: ${{ matrix.CXX }}

    steps:
    - name: Install the latest compilers
      if: matrix.extra-packages
      run: |
        sudo add-apt-repository ppa:ubuntu-toolchain-r/test
        wget -O - https://apt.llvm.org/llvm-snapshot.gpg.key | sudo apt-key add -
        sudo add-apt-repository 'deb http://apt.llvm.org/focal/ llvm-toolchain-focal-12 main'
        sudo apt-get update
        sudo apt-get install -y ${{ matrix.extra-packages }}

    - uses: actions/checkout@v2
      with:
        submodules: recursive

    - name: Configure CMake
      working-directory: ${{github.workspace}}/core
      run: cmake -B ${{github.workspace}}/core/build -DCMAKE_BUILD_TYPE=${{ matrix.build_type }}

    - name: Build
      working-directory: ${{github.workspace}}/core
      run: cmake --build ${{github.workspace}}/core/build --config ${{ matrix.build_type }}

    - name: Unit Tests
      working-directory: ${{github.workspace}}/core/build
      run: ctest -C Debug

    - name: Run puzzles
      working-directory: ${{github.workspace}}/core/build
      run: ./puzzles
