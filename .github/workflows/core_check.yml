#
# Copyright (c) 2022 Emanuel Machado da Silva
#
# Permission is hereby granted, free of charge, to any person obtaining a copy
# of this software and associated documentation files (the "Software"), to deal
# in the Software without restriction, including without limitation the rights
# to use, copy, modify, merge, publish, distribute, sublicense, and/or sell
# copies of the Software, and to permit persons to whom the Software is
# furnished to do so, subject to the following conditions:
#
# The above copyright notice and this permission notice shall be included in all
# copies or substantial portions of the Software.
#
# THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR
# IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,
# FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE
# AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER
# LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,
# OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE
# SOFTWARE.
#

name: Core Check

on:
  push:
    paths:
    - 'core/**'
    - '.github/workflows/core_check.yml'
  pull_request:
    paths:
    - 'core/**'
    - '.github/workflows/core_check.yml'

jobs:
  check_run:
    runs-on: ${{ matrix.os }}
    strategy:
      matrix:
        os: [ubuntu-22.04, macos-12]
        compiler: [gcc-11,gcc-12,gcc-13,clang-12,clang-13,clang-14,clang-15,clang-16]
        build_type: [Debug, Release]
        include:
          - compiler: gcc-11
            CC: gcc-11
            CXX: g++-11
          - compiler: gcc-12
            CC: gcc-12
            CXX: g++-12
          - compiler: gcc-13
            CC: gcc-13
            CXX: g++-13
            ubuntu-extra-packages: gcc-13 g++-13
          - compiler: clang-12
            CC: clang-12
            CXX: clang++-12
            macos-extra-package: llvm@12
            ubuntu-extra-packages: clang-12 libunwind-12-dev libc++-12-dev libc++abi-12-dev
          - compiler: clang-13
            CC: clang-13
            CXX: clang++-13
            macos-extra-package: llvm@13
            ubuntu-extra-packages: clang-13 libunwind-13-dev libc++-13-dev libc++abi-13-dev
          - compiler: clang-14
            CC: clang-14
            CXX: clang++-14
            macos-extra-package: llvm@14
          - compiler: clang-15
            CC: clang-15
            CXX: clang++-15
            macos-extra-package: llvm@15
            ubuntu-extra-packages: clang-15 libc++-15-dev libc++abi-15-dev
          - compiler: clang-16
            CC: clang-16
            CXX: clang++-16
            macos-extra-package: llvm@16
            ubuntu-extra-packages: clang-16 libc++-16-dev libc++abi-16-dev
        exclude:
          # TODO: Haven't been able to find a working version yet
          - os: ubuntu-22.04
            compiler: gcc-13

    env:
      CC: ${{ matrix.CC }}
      CXX: ${{ matrix.CXX }}

    steps:
    - name: Install the latest compilers (Ubuntu)
      if: matrix.os == 'ubuntu-22.04' && matrix.ubuntu-extra-packages
      run: |
        sudo add-apt-repository ppa:ubuntu-toolchain-r/test
        wget -O - https://apt.llvm.org/llvm-snapshot.gpg.key | sudo apt-key add -
        sudo add-apt-repository 'deb http://apt.llvm.org/jammy/ llvm-toolchain-jammy-16 main'
        sudo apt-get update
        sudo apt-get install -y ${{ matrix.ubuntu-extra-packages }}

    - name: Install the latest compilers (Mac OS)
      if: matrix.os == 'macos-12' && matrix.macos-extra-package
      run: |
        brew install ${{ matrix.macos-extra-package }}
        echo "CC=$(brew --prefix ${{ matrix.macos-extra-package }})/bin/clang" >> "$GITHUB_ENV"
        echo "CXX=$(brew --prefix ${{ matrix.macos-extra-package }})/bin/clang++" >> "$GITHUB_ENV"

    - uses: actions/checkout@v2
      with:
        submodules: recursive

    - name: Configure CMake
      working-directory: ${{github.workspace}}/core
      run: cmake -B ${{github.workspace}}/core/build -DCMAKE_BUILD_TYPE=${{ matrix.build_type }}

    - name: Build
      working-directory: ${{github.workspace}}/core
      run: cmake --build ${{github.workspace}}/core/build --config ${{ matrix.build_type }}

    - name: Unit Tests
      working-directory: ${{github.workspace}}/core/build
      run: ctest -C Debug

    - name: Run puzzles
      working-directory: ${{github.workspace}}/core/build
      run: ./puzzles
